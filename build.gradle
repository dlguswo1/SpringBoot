plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
	// dto validation
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
//	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
//	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

// jwts
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation 'javax.xml.bind:jaxb-api:2.3.0'

// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//gson - json 메시지를 다루기 위한 라이브러리
	implementation 'com.google.code.gson:gson'


	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
